// @warnings{no-unused}
module test;

type Struct struct {
    int32 x;
}

type Enum enum uint32 {
    A, B
}

type Func func void(int32);

type FuncOther func bool(uint8*);

type FuncSame func void(int32);

func void test1(Func arg) {
    bool a = cast<bool>(arg);         // @error{pointers may only be cast to integer type 'uint64'}
    uint8 b = cast<uint8>(arg);       // @error{pointers may only be cast to integer type 'uint64'}
    uint32 c = cast<uint32>(arg);     // @error{pointers may only be cast to integer type 'uint64'}
    float32 d = cast<float32>(arg);   // @error{pointers may only be cast to integer type 'uint64'}
    uint32* e = cast<uint32*>(arg);   // @error{only integers of type 'uint64' may be cast to a pointer}
    uint32 f = cast<uint32>(arg);     // @error{pointers may only be cast to integer type 'uint64'}
    uint64 g = cast<uint64>(arg);
    Enum j = cast<Enum>(arg);              // @error{cannot cast type 'void (int32)' to type '(enum)Enum' (aka 'uint32')}
    FuncOther k = cast<FuncOther>(arg);
    FuncSame l = cast<FuncSame>(arg);
}

