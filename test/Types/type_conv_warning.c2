// @warnings{no-unused}
module test;

public func int32 main() {
    int64 myInt64 = 1;
    int32 myInt32 = 1;
    int16 myInt16 = 1;
    int8 myInt8 = 1;
    uint64 myUInt64 = 1;
    uint32 myUInt32 = 1;
    uint16 myUInt16 = 1;
    uint8 myUInt8 = 1;
    float32 myFloat32 = 1;
    float64 myFloat64 = 1;
    bool myBool = true;

    myInt32 = myInt64;  // @warning{implicit conversion loses integer precision: 'int64' to 'int32'}
    myInt16 = myInt32;  // @warning{implicit conversion loses integer precision: 'int32' to 'int16'}
    myInt8  = myInt16;  // @warning{implicit conversion loses integer precision: 'int16' to 'int8'}
    myBool  = myInt64;

    myUInt32 = myUInt64;    // @warning{implicit conversion loses integer precision: 'uint64' to 'uint32'}
    myUInt16 = myUInt32;    // @warning{implicit conversion loses integer precision: 'uint32' to 'uint16'}
    myUInt8  = myUInt16;    // @warning{implicit conversion loses integer precision: 'uint16' to 'uint8'}
    myBool   = myUInt64;

    myInt32  = myUInt32;    // @warning{implicit conversion changes signedness: 'uint32' to 'int32'}
    myInt32  = myUInt16;
    myUInt32 = myInt16;     // @warning{implicit conversion changes signedness: 'int16' to 'uint32'}

    myInt64   = myFloat32;  // @warning{implicit conversion turns floating-point number into integer: 'float32' to 'int64'}
    myInt32   = myFloat32;  // @warning{implicit conversion turns floating-point number into integer: 'float32' to 'int32'}
    myFloat32 = myFloat64;  // @warning{implicit conversion loses floating-point precision: 'float64' to 'float32'}

    myBool = myFloat32;     // @error{invalid type conversion from 'float32' to 'bool'}
    myBool = myFloat64;     // @error{invalid type conversion from 'float64' to 'bool'}

    return 0;
}

